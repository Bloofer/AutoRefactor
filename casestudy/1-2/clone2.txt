public ActionForward logexport( ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response ) throws Exception {
		HistoryLogForm historyLogForm = ( HistoryLogForm ) form;

		HttpSession httpSession = request.getSession();
		String userID = ( String ) httpSession.getAttribute( "USERID" );

		String dsdCode = historyLogForm.getDsdCode();

		if( userID == null || "".equals( userID ) ) {
			request.setAttribute( "AUTHACTION", ServerMessage.getMessage( request.getLocale(), "msg.need.auth" ) );
			return mapping.findForward( "NEEDAUTH" );
		}

		HistoryLogBL historyLogBL = null;
		HistoryLogID historyLogListID = null;
		try {
			HistoryLogID historyLogID = ( HistoryLogID ) setIdentity( form, request.getSession() );

			historyLogBL = new HistoryLogBL();
			historyLogID.setDsdCode( dsdCode );
			historyLogID.setProductType( historyLogForm.getProductType() );
			historyLogListID = historyLogBL.list( historyLogID );

			List logList = historyLogListID.list();
			/*
			for( int i = 0; i < logList.size(); i++ ) {
				HistoryLogBeans logBeans = ( HistoryLogBeans ) logList.get( i );
				logBeans.setObjDesc( getStringLabel( request, "history." + logBeans.getObjType() ) );
			}
			*/
			processForView( request, logList );
		} catch( Exception e ) {
			logger.errorString( "list", e.toString() );
			logger.trace( "list", e );

			// Report the error using the appropriate name and ID.
			request.setAttribute( "ERROR.MESSAGE", ServerMessage.getMessage( request.getLocale(), "error.KNOWN" ) );
		}

		request.setAttribute( "ACTIONFORM", form );
		request.setAttribute( "HISTORYLOGLIST", historyLogListID );

		return mapping.findForward( "usage.historylog.log_export" );
	}
