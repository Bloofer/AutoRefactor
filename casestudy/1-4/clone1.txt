public ActionForward statsDate( ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response ) throws Exception
	{
		FutMotionStatsUsageForm statsForm = (FutMotionStatsUsageForm)form;
		HttpSession httpSession = request.getSession();
		
		checkDayCondition( statsForm, (TimeZone) httpSession.getAttribute( "USERTIMEZONE" ) );
		
		/*
		 * hyhan - 2012.03.16
		 * 화면에서 받은 값을 사용하지 않고 drmone.xml에 정의된 값을 사용
		 */
		statsForm.setLimitRowSize( ServerConfig.getInstance().getValue( "STATIATICS_TOP_COUNT", "10" ) );
		
		String userID = (String)httpSession.getAttribute( "USERID" );
		String dsdCode = statsForm.getDsdCode();

		if( dsdCode == null || "".equals( dsdCode ) || userID == null || "".equals( userID ) )
		{
			request.setAttribute( "AUTHACTION", ServerMessage.getMessage( request.getLocale(), "msg.need.auth" ) );
			return mapping.findForward( "NEEDAUTH" );
		}

		Map<String, Object> searchMap = new HashMap<String, Object>();
		searchMap.put( "dsdCode", statsForm.getDsdCode() );
		searchMap.put( "startDay", statsForm.getStartDay() );
		searchMap.put( "endDay", statsForm.getEndDay() );
		searchMap.put( "sortItem", statsForm.getSortItem() );
		// searchMap.put( "limitRowSize", Integer.parseInt( statsForm.getLimitRowSize() ) );
		TimeZone timezone = (TimeZone) httpSession.getAttribute( "USERTIMEZONE" );
		searchMap.put( "timeZoneId", timezone.getID() );
		
		UsageStats statsUsageApi = new UsageStats();
		List<UsageStatsDate> statsList = statsUsageApi.selectDateDay( searchMap );

		request.setAttribute( "ACTIONFORM", form );
		request.setAttribute( "STATSLIST", statsList );

		return mapping.findForward( "fsp.motionstats.usage.date" );
	}

